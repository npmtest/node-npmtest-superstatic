{"/home/travis/build/npmtest/node-npmtest-superstatic/test.js":"/* istanbul instrument in package npmtest_superstatic */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-superstatic/lib.npmtest_superstatic.js":"/* istanbul instrument in package npmtest_superstatic */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_superstatic = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_superstatic = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-superstatic/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-superstatic && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_superstatic */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_superstatic\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_superstatic.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_superstatic.rollup.js'] =\n            local.assetsDict['/assets.npmtest_superstatic.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_superstatic.__dirname +\n                    '/lib.npmtest_superstatic.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/index.js":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nexports = module.exports = require('./superstatic');\nexports.server = require('./server');\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/superstatic.js":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar _ = require('lodash');\nvar makerouter = require('router');\n\nvar fsProvider = require('./providers/fs');\nvar Responder = require('./responder');\nvar activator = require('./activator');\nvar notFound = require('./middleware/missing');\n\nvar promiseback = require('./utils/promiseback');\nvar loadConfigFile = require('./loaders/config-file');\n\nvar CWD = process.cwd();\n\nvar superstatic = function(spec) {\n  spec = _.assign({\n    stack: 'default'\n  }, spec);\n\n  if (!_.has(spec, 'fallthrough')) {\n    spec.fallthrough = true;\n  }\n\n  if (_.isString(spec.stack) && _.has(superstatic.stacks, spec.stack)) {\n    spec.stack = superstatic.stacks[spec.stack];\n  }\n\n  var router = makerouter();\n  var cwd = spec.cwd || CWD;\n\n  // Load data\n  var config = spec.config = loadConfigFile(spec.config);\n  config.errorPage = config.errorPage || '/404.html';\n\n  // Set up provider\n  var provider = spec.provider ? promiseback(spec.provider, 2) : fsProvider(_.extend({\n    cwd: cwd // default current working directory\n  }, config));\n\n  // Setup helpers\n  router.use(function(req, res, next) {\n    res.superstatic = new Responder(req, res, {\n      provider: provider,\n      config: config,\n      gzip: spec.gzip\n    });\n\n    next();\n  });\n\n  router.use(activator(spec, provider));\n\n  // Handle not found pages\n  if (!spec.fallthrough) {\n    router.use(notFound(spec));\n  }\n\n  return router;\n};\n\nsuperstatic.stacks = {\n  default: ['protect', 'redirects', 'headers', 'cleanUrls', 'env', 'files', 'rewrites', 'missing'],\n  strict: ['redirects', 'headers', 'cleanUrls', 'files', 'rewrites', 'missing']\n};\n\nmodule.exports = superstatic;\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/providers/fs.js":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar crypto = require('crypto');\nvar fs = require('fs');\nvar pathjoin = require('join-path');\nvar RSVP = require('rsvp');\nvar _ = require('lodash');\n\nvar statPromise = RSVP.denodeify(fs.stat);\nvar multiStat = function(paths) {\n  var pathname = paths.shift();\n  return statPromise(pathname).then(function(stat) {\n    stat.path = pathname;\n    return stat;\n  }, function(err) {\n    if (paths.length) {\n      return multiStat(paths);\n    }\n    return RSVP.reject(err);\n  });\n};\n\nmodule.exports = function(options) {\n  var etagCache = {};\n  var cwd = options.cwd || process.cwd();\n  var publicPaths = options.public || ['.'];\n  if (!_.isArray(publicPaths)) {\n    publicPaths = [publicPaths];\n  }\n\n  function _fetchEtag(pathname, stat) {\n    return new RSVP.Promise(function(resolve, reject) {\n      var cached = etagCache[pathname];\n      if (cached && cached.timestamp === stat.mtime) {\n        return resolve(cached.value);\n      }\n\n      // the file you want to get the hash\n      var fd = fs.createReadStream(pathname);\n      var hash = crypto.createHash('md5');\n      hash.setEncoding('hex');\n\n      fd.on('error', function(err) {\n        reject(err);\n      });\n\n      fd.on('end', function() {\n        hash.end();\n        var etag = hash.read();\n        etagCache[pathname] = {\n          timestamp: stat.mtime,\n          value: etag\n        };\n        resolve(etag);\n      });\n\n      // read all file and pipe it (write it) to the hash object\n      return fd.pipe(hash);\n    });\n  }\n\n  return function(req, pathname) {\n    pathname = decodeURI(pathname);\n    // jumping to parent directories is not allowed\n    if (pathname.indexOf('../') >= 0) {\n      return RSVP.resolve(null);\n    }\n\n    var result = {};\n    var foundPath;\n    var fullPathnames = publicPaths.map(function(p) {\n      return pathjoin(cwd, p, pathname);\n    });\n\n    return multiStat(fullPathnames).then(function(stat) {\n      foundPath = stat.path;\n      result.modified = stat.mtime.getTime();\n      result.size = stat.size;\n      return _fetchEtag(stat.path, stat);\n    }).then(function(etag) {\n      result.etag = etag;\n      result.stream = fs.createReadStream(foundPath);\n      return result;\n    }).catch(function(err) {\n      if (err.code === 'ENOENT' || err.code === 'ENOTDIR' || err.code === 'EISDIR') {\n        return null;\n      }\n      return RSVP.reject(err);\n    });\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/responder.js":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar RSVP = require('rsvp');\nvar _ = require('lodash');\nvar mime = require('mime-types');\nvar path = require('path');\nvar awaitFinished = RSVP.denodeify(require('on-finished'));\nvar destroy = require('destroy');\nvar compress = require('compression')();\n\nvar Responder = function(req, res, options) {\n  this.req = req;\n  this.res = res;\n  this.provider = options.provider;\n  this.config = options.config || {};\n  this.gzip = options.gzip;\n};\n\nResponder.prototype.isNotModified = function(stats) {\n  if (stats.etag && stats.etag === this.req.headers['if-none-match']) {\n    return true;\n  }\n\n  var reqModified = this.req.headers['if-modified-since'];\n  if (reqModified) {\n    reqModified = new Date(reqModified).getTime();\n  }\n  if (stats.modified && reqModified && stats.modified < reqModified) {\n    return true;\n  }\n\n  return false;\n};\n\nResponder.prototype.handle = function(item, next) {\n  var self = this;\n  return this._handle(item).then(function(responded) {\n    if (!responded && next) {\n      next();\n    }\n    return responded;\n  }).catch(function(err) {\n    return self.handleError(err);\n  });\n};\n\nResponder.prototype._handle = function(item) {\n  if (_.isArray(item)) {\n    return this.handleStack(item);\n  } else if (_.isString(item)) {\n    return this.handleFile({file: item});\n  } else if (_.isObject(item)) {\n    if (item.file) {\n      return this.handleFile(item);\n    } else if (item.redirect) {\n      return this.handleRedirect(item);\n    } else if (item.data) {\n      return this.handleData(item);\n    }\n  }\n\n  return RSVP.reject(new Error(JSON.stringify(item) + ' is not a recognized responder directive'));\n};\n\nResponder.prototype.handleError = function(err) {\n  this.res.statusCode = 500;\n  console.log(err.stack);\n  this.res.end('Unexpected error occurred.');\n};\n\nResponder.prototype.handleStack = function(stack) {\n  var self = this;\n  if (stack.length) {\n    return this._handle(stack.shift()).then(function(responded) {\n      return responded ? true : self.handleStack(stack);\n    });\n  }\n\n  return RSVP.resolve(false);\n};\n\nResponder.prototype.handleFile = function(file) {\n  var self = this;\n  return this.provider(this.req, file.file).then(function(result) {\n    if (!result) {\n      return false;\n    }\n\n    if (self.isNotModified(result)) {\n      return self.handleNotModified(result);\n    }\n\n    return self.handleFileStream(file, result);\n  });\n};\n\nResponder.prototype.handleFileStream = function(file, result) {\n  var self = this;\n\n  this.streamedFile = file;\n  this.res.statusCode = file.status || 200;\n  if (this.res.statusCode === 200 && file.file === this.config.errorPage) {\n    this.res.statusCode = 404;\n  }\n  this.res.setHeader('Content-Type', result.contentType || mime.contentType(path.extname(file.file)));\n  if (result.size) { this.res.setHeader('Content-Length', result.size); }\n  if (result.etag) { this.res.setHeader('ETag', result.etag); }\n  if (result.modified) {\n    this.res.setHeader('Last-Modified', new Date(result.modified).toUTCString());\n  }\n  if (this.gzip) {\n    compress(this.req, this.res, function() {\n      result.stream.pipe(self.res);\n    });\n  } else {\n    result.stream.pipe(self.res);\n  }\n\n  return awaitFinished(this.res).then(function() {\n    destroy(result.stream);\n    return true;\n  });\n};\n\nResponder.prototype.handleNotModified = function() {\n  this.res.statusCode = 304;\n  this.res.removeHeader('Content-Type');\n  this.res.removeHeader('Content-Length');\n  this.res.removeHeader('Transfer-Encoding');\n  this.res.end();\n};\n\nResponder.prototype.handleRedirect = function(redirect) {\n  this.res.statusCode = redirect.status || 301;\n  this.res.setHeader('Location', redirect.redirect);\n  this.res.setHeader('Content-Type', 'text/html; charset=utf-8');\n  this.res.end('Redirecting to ' + redirect.redirect);\n  return RSVP.resolve(true);\n};\n\nResponder.prototype.handleData = function(data) {\n  this.res.statusCode = data.status || 200;\n  this.res.setHeader('Content-Type', data.contentType || 'text/html; charset=utf-8');\n  this.res.end(data.data);\n  return RSVP.resolve(true);\n};\n\nmodule.exports = Responder;\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/activator.js":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar middleware = require('./middleware');\nvar _ = require('lodash');\nvar promiseback = require('./utils/promiseback');\nvar RSVP = require('rsvp');\n\nvar Activator = function(spec, provider) {\n  this.spec = spec;\n  this.provider = provider;\n  this.stack = this.buildStack();\n\n  if (_.isFunction(spec.config)) {\n    this.awaitConfig = spec.config;\n  } else {\n    this.awaitConfig = function() {\n      return RSVP.resolve(spec.config);\n    };\n  }\n};\n\nActivator.prototype.buildStack = function() {\n  var self = this;\n\n  var stack = this.spec.stack.slice(0);\n  _.forEach(this.spec.before, function(wares, name) {\n    stack.splice.apply(stack, [stack.indexOf(name), 0].concat(wares));\n  });\n\n  _.forEach(this.spec.after, function(wares, name) {\n    stack.splice.apply(stack, [stack.indexOf(name) + 1, 0].concat(wares));\n  });\n\n  return stack.map(function(ware) {\n    return _.isFunction(ware) ? ware : middleware[ware](self.spec);\n  });\n};\n\nActivator.prototype.build = function() {\n  var self = this;\n\n  return function(req, res, next) {\n    promiseback(self.awaitConfig, 2)(req, res).then(function(config) {\n      req.superstatic = config || {};\n\n      var stack = self.stack.slice(0).reverse();\n      var _run = function() {\n        if (!stack.length) {\n          return next();\n        }\n        var fn = stack.pop();\n        return fn(req, res, _run);\n      };\n\n      _run();\n    }, next);\n  };\n};\n\nmodule.exports = function(spec, provider) {\n  return new Activator(spec, provider).build();\n};\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/middleware/index.js":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar _ = require('lodash');\n\n[\n  'protect',\n  'redirects',\n  'headers',\n  'cleanUrls',\n  'env',\n  'files',\n  'rewrites',\n  'missing'\n].forEach(function(name) {\n  exports[name] = function(spec, config) {\n    var mware = require('./' + _.kebabCase(name))(spec, config);\n    mware._name = name;\n    return mware;\n  };\n});\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/utils/promiseback.js":"'use strict';\n\nvar RSVP = require('rsvp');\n\nmodule.exports = function(userFn, argCount) {\n  // if no callback argument is provided, assume the promise form\n  if (userFn.length <= argCount) {\n    return userFn;\n  }\n  // otherwise promise-ify the callback\n  return RSVP.denodeify(userFn);\n};\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/middleware/missing.js":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar setHeaders = require('./headers');\nvar fs = require('fs');\n\nmodule.exports = function(spec) {\n  var defaultErrorContent;\n  if (spec.errorPage) {\n    defaultErrorContent = fs.readFileSync(spec.errorPage, 'utf8');\n  }\n\n  return function(req, res, next) {\n    var config = req.superstatic;\n    var errorPage = config.errorPage || '/404.html';\n\n    setHeaders(spec)({\n      superstatic: config,\n      url: errorPage\n    }, res, function() {\n      var handles = [{file: errorPage, status: 404}];\n      if (defaultErrorContent) {\n        handles.push({data: defaultErrorContent, status: 404});\n      }\n      res.superstatic.handle(handles, next);\n    });\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/middleware/headers.js":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar _ = require('lodash');\nvar slasher = require('glob-slasher');\nvar urlParser = require('fast-url-parser');\nvar onHeaders = require('on-headers');\nvar minimatch = require('minimatch');\n\nvar normalizedConfigHeaders = function(spec, config) {\n  var out = config || [];\n  if (_.isArray(config)) {\n    var _isAllowed = function(headerToSet) {\n      return _.includes(spec.allowedHeaders, headerToSet.key.toLowerCase());\n    };\n\n    for (var i = 0; i < config.length; i++) {\n      config[i].source = slasher(config[i].source);\n      config[i].headers = config[i].headers || [];\n      if (spec.allowedHeaders) {\n        config[i].headers = config[i].headers.filter(_isAllowed);\n      }\n    }\n  }\n\n  return out;\n};\n\nvar matcher = function(configHeaders) {\n  return function(url) {\n    return configHeaders.filter(function(configHeader) {\n      return minimatch(url, configHeader.source);\n    }).reduce(function(out, val) {\n      val.headers.forEach(function(headerToSet) {\n        out.push(headerToSet);\n      });\n      return out;\n    }, []);\n  };\n};\n\nmodule.exports = function(spec) {\n  return function(req, res, next) {\n    var config = _.get(req, 'superstatic.headers');\n    if (!config) {\n      return next();\n    }\n\n    var headers = matcher(normalizedConfigHeaders(spec, config));\n    var pathname = urlParser.parse(req.url).pathname;\n    var matches = headers(slasher(pathname));\n\n    onHeaders(res, function() {\n      _.forEach(matches, function(header) {\n        res.setHeader(header.key, header.value);\n      });\n    });\n\n    return next();\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/loaders/config-file.js":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar fs = require('fs');\n\nvar _ = require('lodash');\nvar join = require('join-path');\nvar path = require('path');\n\nvar CONFIG_FILE = ['superstatic.json', 'firebase.json'];\n\nmodule.exports = function(filename) {\n  if (_.isFunction(filename)) { return filename; }\n\n  filename = filename || CONFIG_FILE;\n\n  var configObject = {};\n  var config = {};\n\n  // From custom config data passed in\n  try {\n    configObject = JSON.parse(filename);\n  } catch (e) {\n    if (_.isPlainObject(filename)) {\n      configObject = filename;\n      filename = CONFIG_FILE;\n    }\n  }\n\n  if (_.isArray(filename)) {\n    filename = _.find(filename, function(name) {\n      return fs.existsSync(join(process.cwd(), name));\n    });\n  }\n\n  // Set back to default config file if stringified object is\n  // given as config. With this, we override values in the config file\n  if (_.isPlainObject(filename)) {\n    filename = CONFIG_FILE;\n  }\n\n\n  // A file name or array of file names\n  if (_.isString(filename) && _.endsWith(filename, 'json')) {\n    try {\n      config = JSON.parse(fs.readFileSync(path.resolve(filename)));\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  // Passing an object as the config value merges\n  // the config data\n  return _.assign(config, configObject);\n};\n","/home/travis/build/npmtest/node-npmtest-superstatic/node_modules/superstatic/lib/server.js":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Use of this source code is governed by a BSD-style\n * license that can be found in the LICENSE file or at\n * https://github.com/firebase/superstatic/blob/master/LICENSE\n */\n'use strict';\n\nvar _ = require('lodash');\nvar connect = require('connect');\nvar networkLogger = require('morgan');\n\nvar superstatic = require('./superstatic');\n\nmodule.exports = function(spec) {\n  spec = _.assign({fallthrough: false}, spec);\n\n  var app = connect();\n  var listen = app.listen.bind(app);\n\n  // Override method because port and host are given\n  // in the spec object\n  app.listen = function(done) {\n    var server = {};\n\n    app.use(superstatic(spec));\n\n    // Start server\n    server = listen(spec.port, spec.hostname || spec.host, done);\n\n    return server;\n  };\n\n  // Console output for network requests\n  if (spec.debug) {\n    app.use(networkLogger('combined'));\n  }\n\n  return app;\n};\n"}